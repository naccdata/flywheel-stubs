"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, List, Optional

from flywheel.finder import Finder
from flywheel.models.file_entry import FileEntry
from flywheel.models.project_parents import ProjectParents
from flywheel.models.roles_role_assignment import RolesRoleAssignment
from flywheel.models.subject import Subject
from flywheel.file_spec import FileSpec

class Project:
    """Project container class"""

    def __init__(self, label: str, parents: ProjectParents) -> None:
        """Initialize a new project

        Args:
            label: Project label
            parents: Project parents information
        """
        ...

    @property
    def id(self) -> str:
        """Project ID"""
        ...

    @property
    def label(self) -> str:
        """Project label"""
        ...

    @property
    def description(self) -> Optional[str]:
        """Project description"""
        ...

    @property
    def group(self) -> str:
        """Project group"""
        ...

    @property
    def tags(self) -> List[str]:
        """Project tags"""
        ...

    @property
    def permissions(self) -> List[RolesRoleAssignment]:
        """Project permissions"""
        ...

    @property
    def copyable(self) -> bool:
        """Whether project is copyable"""
        ...

    @property
    def info(self) -> Dict[str, Any]:
        """Project info/metadata"""
        ...

    @property
    def subjects(self) -> Finder[Subject]:
        """Project subjects finder"""
        ...

    @property
    def files(self) -> List[FileEntry]:
        """Project files"""
        ...

    def add_permission(self, permission: Any) -> None:
        """Add permission to project

        Args:
            permission: Permission to add
        """
        ...

    def update_permission(self, user_id: str, permission: Any) -> None:
        """Update user permission

        Args:
            user_id: User ID
            permission: New permission
        """
        ...

    def add_tag(self, tag: str) -> None:
        """Add tag to project

        Args:
            tag: Tag to add
        """
        ...

    def get_file(self, name: str) -> FileEntry:
        """Get file by name

        Args:
            name: File name

        Returns:
            File entry
        """
        ...

    def read_file(self, name: str) -> bytes:
        """Read file contents

        Args:
            name: File name

        Returns:
            File contents
        """
        ...

    def update(self,
               copyable: Optional[bool] = None,
               description: Optional[str] = None,
               **kwargs) -> None:
        """Update project properties

        Args:
            copyable: Whether project is copyable
            description: Project description
            **kwargs: Additional properties to update
        """
        ...

    def upload_file(self, file: FileSpec) -> List[FileEntry]:
        """Upload file to project

        Args:
            file: File specification

        Returns:
            List of uploaded file entries
        """
        ...

    def update_info(self, *args: Dict[str, Any]) -> None:
        """Update project info/metadata

        Args:
            *args: Info updates
        """
        ...

    def reload(self) -> 'Project':
        """Reload project from server

        Returns:
            Reloaded project
        """
        ...

    def add_subject(self, label: str) -> Subject:
        """Add subject to project

        Args:
            label: Subject label

        Returns:
            Created subject
        """
        ...
