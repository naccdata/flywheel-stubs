"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, List, Optional
from datetime import datetime

from flywheel.finder import Finder
from flywheel.models.file_entry import FileEntry
from flywheel.models.session import Session
from flywheel.models.subject_parents import SubjectParents
from flywheel.file_spec import FileSpec

class Subject:
    """Subject container class"""

    def __init__(self, label: str, parents: SubjectParents) -> None:
        """Initialize a new subject

        Args:
            label: Subject label
            parents: Subject parents information
        """
        ...

    @property
    def id(self) -> str:
        """Subject ID"""
        ...

    @property
    def label(self) -> str:
        """Subject label"""
        ...

    @property
    def code(self) -> Optional[str]:
        """Subject code"""
        ...

    @property
    def firstname(self) -> Optional[str]:
        """Subject first name"""
        ...

    @property
    def lastname(self) -> Optional[str]:
        """Subject last name"""
        ...

    @property
    def sex(self) -> Optional[str]:
        """Subject sex"""
        ...

    @property
    def age(self) -> Optional[int]:
        """Subject age"""
        ...

    @property
    def project(self) -> str:
        """Project ID"""
        ...

    @property
    def tags(self) -> List[str]:
        """Subject tags"""
        ...

    @property
    def info(self) -> Dict[str, Any]:
        """Subject info/metadata"""
        ...

    @property
    def files(self) -> List[FileEntry]:
        """Subject files"""
        ...

    @property
    def sessions(self) -> Finder[Session]:
        """Subject sessions finder"""
        ...

    @property
    def created(self) -> Optional[datetime]:
        """Subject creation timestamp"""
        ...

    @property
    def modified(self) -> Optional[datetime]:
        """Subject modification timestamp"""
        ...

    def add_tag(self, tag: str) -> None:
        """Add tag to subject

        Args:
            tag: Tag to add
        """
        ...

    def get_file(self, name: str) -> FileEntry:
        """Get file by name

        Args:
            name: File name

        Returns:
            File entry
        """
        ...

    def read_file(self, name: str) -> bytes:
        """Read file contents

        Args:
            name: File name

        Returns:
            File contents
        """
        ...

    def update(self,
               code: Optional[str] = None,
               firstname: Optional[str] = None,
               lastname: Optional[str] = None,
               sex: Optional[str] = None,
               age: Optional[int] = None,
               **kwargs) -> None:
        """Update subject properties

        Args:
            code: Subject code
            firstname: Subject first name
            lastname: Subject last name
            sex: Subject sex
            age: Subject age
            **kwargs: Additional properties to update
        """
        ...

    def upload_file(self, file: FileSpec) -> List[FileEntry]:
        """Upload file to subject

        Args:
            file: File specification

        Returns:
            List of uploaded file entries
        """
        ...

    def update_info(self, *args: Dict[str, Any]) -> None:
        """Update subject info/metadata

        Args:
            *args: Info updates
        """
        ...

    def reload(self) -> 'Subject':
        """Reload subject from server

        Returns:
            Reloaded subject
        """
        ...

    def add_session(self, label: str) -> Session:
        """Add session to subject

        Args:
            label: Session label

        Returns:
            Created session
        """
        ...
