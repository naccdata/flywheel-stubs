"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class ProjectSettingsInput:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, viewer_apps=..., deid_profile=..., forms=..., external_routing_id=..., sharing=..., workspaces=..., cvat=...) -> None:
        """ProjectSettingsInput - a model defined in Swagger"""
        ...
    
    @property
    def viewer_apps(self): # -> None:
        """Gets the viewer_apps of this ProjectSettingsInput.


        :return: The viewer_apps of this ProjectSettingsInput.
        :rtype: list[ViewerAppInput]
        """
        ...
    
    @viewer_apps.setter
    def viewer_apps(self, viewer_apps): # -> None:
        """Sets the viewer_apps of this ProjectSettingsInput.


        :param viewer_apps: The viewer_apps of this ProjectSettingsInput.  # noqa: E501
        :type: list[ViewerAppInput]
        """
        ...
    
    @property
    def deid_profile(self): # -> None:
        """Gets the deid_profile of this ProjectSettingsInput.


        :return: The deid_profile of this ProjectSettingsInput.
        :rtype: union[str,object]
        """
        ...
    
    @deid_profile.setter
    def deid_profile(self, deid_profile): # -> None:
        """Sets the deid_profile of this ProjectSettingsInput.


        :param deid_profile: The deid_profile of this ProjectSettingsInput.  # noqa: E501
        :type: union[str,object]
        """
        ...
    
    @property
    def forms(self): # -> None:
        """Gets the forms of this ProjectSettingsInput.


        :return: The forms of this ProjectSettingsInput.
        :rtype: dict(str, list[FormDefinition])
        """
        ...
    
    @forms.setter
    def forms(self, forms): # -> None:
        """Sets the forms of this ProjectSettingsInput.


        :param forms: The forms of this ProjectSettingsInput.  # noqa: E501
        :type: dict(str, list[FormDefinition])
        """
        ...
    
    @property
    def external_routing_id(self): # -> None:
        """Gets the external_routing_id of this ProjectSettingsInput.


        :return: The external_routing_id of this ProjectSettingsInput.
        :rtype: str
        """
        ...
    
    @external_routing_id.setter
    def external_routing_id(self, external_routing_id): # -> None:
        """Sets the external_routing_id of this ProjectSettingsInput.


        :param external_routing_id: The external_routing_id of this ProjectSettingsInput.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def sharing(self): # -> None:
        """Gets the sharing of this ProjectSettingsInput.


        :return: The sharing of this ProjectSettingsInput.
        :rtype: ProjectSettingsSharingInput
        """
        ...
    
    @sharing.setter
    def sharing(self, sharing): # -> None:
        """Sets the sharing of this ProjectSettingsInput.


        :param sharing: The sharing of this ProjectSettingsInput.  # noqa: E501
        :type: ProjectSettingsSharingInput
        """
        ...
    
    @property
    def workspaces(self): # -> None:
        """Gets the workspaces of this ProjectSettingsInput.


        :return: The workspaces of this ProjectSettingsInput.
        :rtype: ProjectSettingsWorkspacesInput
        """
        ...
    
    @workspaces.setter
    def workspaces(self, workspaces): # -> None:
        """Sets the workspaces of this ProjectSettingsInput.


        :param workspaces: The workspaces of this ProjectSettingsInput.  # noqa: E501
        :type: ProjectSettingsWorkspacesInput
        """
        ...
    
    @property
    def cvat(self): # -> None:
        """Gets the cvat of this ProjectSettingsInput.


        :return: The cvat of this ProjectSettingsInput.
        :rtype: CVATSettingsInput
        """
        ...
    
    @cvat.setter
    def cvat(self, cvat): # -> None:
        """Sets the cvat of this ProjectSettingsInput.


        :param cvat: The cvat of this ProjectSettingsInput.  # noqa: E501
        :type: CVATSettingsInput
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


