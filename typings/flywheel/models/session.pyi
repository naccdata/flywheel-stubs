"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, List, Optional
from datetime import datetime

from flywheel.finder import Finder
from flywheel.models.acquisition import Acquisition
from flywheel.models.file_entry import FileEntry
from flywheel.models.session_parents import SessionParents
from flywheel.models.subject import Subject
from flywheel.file_spec import FileSpec

class Session:
    """Session container class"""

    def __init__(self, label: str, parents: SessionParents) -> None:
        """Initialize a new session

        Args:
            label: Session label
            parents: Session parents information
        """
        ...

    @property
    def id(self) -> str:
        """Session ID"""
        ...

    @property
    def label(self) -> str:
        """Session label"""
        ...

    @property
    def description(self) -> Optional[str]:
        """Session description"""
        ...

    @property
    def subject(self) -> Optional[Subject]:
        """Session subject"""
        ...

    @property
    def project(self) -> str:
        """Project ID"""
        ...

    @property
    def tags(self) -> List[str]:
        """Session tags"""
        ...

    @property
    def info(self) -> Dict[str, Any]:
        """Session info/metadata"""
        ...

    @property
    def files(self) -> List[FileEntry]:
        """Session files"""
        ...

    @property
    def acquisitions(self) -> Finder[Acquisition]:
        """Session acquisitions finder"""
        ...

    @property
    def created(self) -> Optional[datetime]:
        """Session creation timestamp"""
        ...

    @property
    def modified(self) -> Optional[datetime]:
        """Session modification timestamp"""
        ...

    @property
    def timestamp(self) -> Optional[datetime]:
        """Session timestamp"""
        ...

    def add_tag(self, tag: str) -> None:
        """Add tag to session

        Args:
            tag: Tag to add
        """
        ...

    def get_file(self, name: str) -> FileEntry:
        """Get file by name

        Args:
            name: File name

        Returns:
            File entry
        """
        ...

    def read_file(self, name: str) -> bytes:
        """Read file contents

        Args:
            name: File name

        Returns:
            File contents
        """
        ...

    def update(self,
               description: Optional[str] = None,
               timestamp: Optional[datetime] = None,
               **kwargs) -> None:
        """Update session properties

        Args:
            description: Session description
            timestamp: Session timestamp
            **kwargs: Additional properties to update
        """
        ...

    def upload_file(self, file: FileSpec) -> List[FileEntry]:
        """Upload file to session

        Args:
            file: File specification

        Returns:
            List of uploaded file entries
        """
        ...

    def update_info(self, *args: Dict[str, Any]) -> None:
        """Update session info/metadata

        Args:
            *args: Info updates
        """
        ...

    def reload(self) -> 'Session':
        """Reload session from server

        Returns:
            Reloaded session
        """
        ...

    def add_acquisition(self, label: str) -> Acquisition:
        """Add acquisition to session

        Args:
            label: Acquisition label

        Returns:
            Created acquisition
        """
        ...
