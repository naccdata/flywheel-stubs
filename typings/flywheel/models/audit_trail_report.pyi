"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class AuditTrailReport:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, id=..., origin=..., project_id=..., subject_ids=..., label=..., status=..., created=..., finished=..., revision=..., deleted=..., error=..., celery_task_id=..., size=...) -> None:
        """AuditTrailReport - a model defined in Swagger"""
        ...
    
    @property
    def id(self): # -> None:
        """Gets the id of this AuditTrailReport.


        :return: The id of this AuditTrailReport.
        :rtype: str
        """
        ...
    
    @id.setter
    def id(self, id): # -> None:
        """Sets the id of this AuditTrailReport.


        :param id: The id of this AuditTrailReport.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def origin(self): # -> None:
        """Gets the origin of this AuditTrailReport.


        :return: The origin of this AuditTrailReport.
        :rtype: Origin
        """
        ...
    
    @origin.setter
    def origin(self, origin): # -> None:
        """Sets the origin of this AuditTrailReport.


        :param origin: The origin of this AuditTrailReport.  # noqa: E501
        :type: Origin
        """
        ...
    
    @property
    def project_id(self): # -> None:
        """Gets the project_id of this AuditTrailReport.


        :return: The project_id of this AuditTrailReport.
        :rtype: str
        """
        ...
    
    @project_id.setter
    def project_id(self, project_id): # -> None:
        """Sets the project_id of this AuditTrailReport.


        :param project_id: The project_id of this AuditTrailReport.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def subject_ids(self): # -> None:
        """Gets the subject_ids of this AuditTrailReport.


        :return: The subject_ids of this AuditTrailReport.
        :rtype: list[str]
        """
        ...
    
    @subject_ids.setter
    def subject_ids(self, subject_ids): # -> None:
        """Sets the subject_ids of this AuditTrailReport.


        :param subject_ids: The subject_ids of this AuditTrailReport.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def label(self): # -> None:
        """Gets the label of this AuditTrailReport.


        :return: The label of this AuditTrailReport.
        :rtype: str
        """
        ...
    
    @label.setter
    def label(self, label): # -> None:
        """Sets the label of this AuditTrailReport.


        :param label: The label of this AuditTrailReport.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def status(self): # -> None:
        """Gets the status of this AuditTrailReport.


        :return: The status of this AuditTrailReport.
        :rtype: AuditTrailReportStatus
        """
        ...
    
    @status.setter
    def status(self, status): # -> None:
        """Sets the status of this AuditTrailReport.


        :param status: The status of this AuditTrailReport.  # noqa: E501
        :type: AuditTrailReportStatus
        """
        ...
    
    @property
    def created(self): # -> None:
        """Gets the created of this AuditTrailReport.


        :return: The created of this AuditTrailReport.
        :rtype: datetime
        """
        ...
    
    @created.setter
    def created(self, created): # -> None:
        """Sets the created of this AuditTrailReport.


        :param created: The created of this AuditTrailReport.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def finished(self): # -> None:
        """Gets the finished of this AuditTrailReport.


        :return: The finished of this AuditTrailReport.
        :rtype: datetime
        """
        ...
    
    @finished.setter
    def finished(self, finished): # -> None:
        """Sets the finished of this AuditTrailReport.


        :param finished: The finished of this AuditTrailReport.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def revision(self): # -> None:
        """Gets the revision of this AuditTrailReport.


        :return: The revision of this AuditTrailReport.
        :rtype: int
        """
        ...
    
    @revision.setter
    def revision(self, revision): # -> None:
        """Sets the revision of this AuditTrailReport.


        :param revision: The revision of this AuditTrailReport.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def deleted(self): # -> None:
        """Gets the deleted of this AuditTrailReport.


        :return: The deleted of this AuditTrailReport.
        :rtype: datetime
        """
        ...
    
    @deleted.setter
    def deleted(self, deleted): # -> None:
        """Sets the deleted of this AuditTrailReport.


        :param deleted: The deleted of this AuditTrailReport.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def error(self): # -> None:
        """Gets the error of this AuditTrailReport.


        :return: The error of this AuditTrailReport.
        :rtype: str
        """
        ...
    
    @error.setter
    def error(self, error): # -> None:
        """Sets the error of this AuditTrailReport.


        :param error: The error of this AuditTrailReport.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def celery_task_id(self): # -> None:
        """Gets the celery_task_id of this AuditTrailReport.


        :return: The celery_task_id of this AuditTrailReport.
        :rtype: str
        """
        ...
    
    @celery_task_id.setter
    def celery_task_id(self, celery_task_id): # -> None:
        """Sets the celery_task_id of this AuditTrailReport.


        :param celery_task_id: The celery_task_id of this AuditTrailReport.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def size(self): # -> None:
        """Gets the size of this AuditTrailReport.


        :return: The size of this AuditTrailReport.
        :rtype: int
        """
        ...
    
    @size.setter
    def size(self, size): # -> None:
        """Sets the size of this AuditTrailReport.


        :param size: The size of this AuditTrailReport.  # noqa: E501
        :type: int
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


