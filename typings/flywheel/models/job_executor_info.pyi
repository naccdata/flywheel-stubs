"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class JobExecutorInfo:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, name=..., host=..., instance_type=..., cpu_cores=..., gpu=..., memory_bytes=..., disk_bytes=..., swap_bytes=...) -> None:
        """JobExecutorInfo - a model defined in Swagger"""
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this JobExecutorInfo.

        A machine or instance name, possibly a FQDN

        :return: The name of this JobExecutorInfo.
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this JobExecutorInfo.

        A machine or instance name, possibly a FQDN

        :param name: The name of this JobExecutorInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def host(self): # -> None:
        """Gets the host of this JobExecutorInfo.

        The hostname or (more likely) IP address of the engine instance

        :return: The host of this JobExecutorInfo.
        :rtype: str
        """
        ...
    
    @host.setter
    def host(self, host): # -> None:
        """Sets the host of this JobExecutorInfo.

        The hostname or (more likely) IP address of the engine instance

        :param host: The host of this JobExecutorInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def instance_type(self): # -> None:
        """Gets the instance_type of this JobExecutorInfo.

        A free form string describing the instance type

        :return: The instance_type of this JobExecutorInfo.
        :rtype: str
        """
        ...
    
    @instance_type.setter
    def instance_type(self, instance_type): # -> None:
        """Sets the instance_type of this JobExecutorInfo.

        A free form string describing the instance type

        :param instance_type: The instance_type of this JobExecutorInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def cpu_cores(self): # -> None:
        """Gets the cpu_cores of this JobExecutorInfo.

        The number of CPU cores

        :return: The cpu_cores of this JobExecutorInfo.
        :rtype: int
        """
        ...
    
    @cpu_cores.setter
    def cpu_cores(self, cpu_cores): # -> None:
        """Sets the cpu_cores of this JobExecutorInfo.

        The number of CPU cores

        :param cpu_cores: The cpu_cores of this JobExecutorInfo.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def gpu(self): # -> None:
        """Gets the gpu of this JobExecutorInfo.

        Whether or not a GPU is available

        :return: The gpu of this JobExecutorInfo.
        :rtype: bool
        """
        ...
    
    @gpu.setter
    def gpu(self, gpu): # -> None:
        """Sets the gpu of this JobExecutorInfo.

        Whether or not a GPU is available

        :param gpu: The gpu of this JobExecutorInfo.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def memory_bytes(self): # -> None:
        """Gets the memory_bytes of this JobExecutorInfo.

        The amount of memory on the system, in bytes

        :return: The memory_bytes of this JobExecutorInfo.
        :rtype: int
        """
        ...
    
    @memory_bytes.setter
    def memory_bytes(self, memory_bytes): # -> None:
        """Sets the memory_bytes of this JobExecutorInfo.

        The amount of memory on the system, in bytes

        :param memory_bytes: The memory_bytes of this JobExecutorInfo.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def disk_bytes(self): # -> None:
        """Gets the disk_bytes of this JobExecutorInfo.

        The size of the hard disk on the system, in bytes

        :return: The disk_bytes of this JobExecutorInfo.
        :rtype: int
        """
        ...
    
    @disk_bytes.setter
    def disk_bytes(self, disk_bytes): # -> None:
        """Sets the disk_bytes of this JobExecutorInfo.

        The size of the hard disk on the system, in bytes

        :param disk_bytes: The disk_bytes of this JobExecutorInfo.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def swap_bytes(self): # -> None:
        """Gets the swap_bytes of this JobExecutorInfo.

        The available swap space, in bytes

        :return: The swap_bytes of this JobExecutorInfo.
        :rtype: int
        """
        ...
    
    @swap_bytes.setter
    def swap_bytes(self, swap_bytes): # -> None:
        """Sets the swap_bytes of this JobExecutorInfo.

        The available swap space, in bytes

        :param swap_bytes: The swap_bytes of this JobExecutorInfo.  # noqa: E501
        :type: int
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


