"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class AnalysisListOutputInflatedJob:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, id=..., label=..., parent=..., parents=..., created=..., modified=..., revision=..., inputs=..., description=..., tags=..., files=..., notes=..., job_id=..., job=..., gear_info=..., compute_provider_id=..., join_origin=..., copy_of=..., original_copy_of=...) -> None:
        """AnalysisListOutputInflatedJob - a model defined in Swagger"""
        ...
    
    @property
    def id(self): # -> None:
        """Gets the id of this AnalysisListOutputInflatedJob.


        :return: The id of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @id.setter
    def id(self, id): # -> None:
        """Sets the id of this AnalysisListOutputInflatedJob.


        :param id: The id of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def label(self): # -> None:
        """Gets the label of this AnalysisListOutputInflatedJob.


        :return: The label of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @label.setter
    def label(self, label): # -> None:
        """Sets the label of this AnalysisListOutputInflatedJob.


        :param label: The label of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def parent(self): # -> None:
        """Gets the parent of this AnalysisListOutputInflatedJob.


        :return: The parent of this AnalysisListOutputInflatedJob.
        :rtype: ContainerReference
        """
        ...
    
    @parent.setter
    def parent(self, parent): # -> None:
        """Sets the parent of this AnalysisListOutputInflatedJob.


        :param parent: The parent of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: ContainerReference
        """
        ...
    
    @property
    def parents(self): # -> None:
        """Gets the parents of this AnalysisListOutputInflatedJob.


        :return: The parents of this AnalysisListOutputInflatedJob.
        :rtype: AnalysisParents
        """
        ...
    
    @parents.setter
    def parents(self, parents): # -> None:
        """Sets the parents of this AnalysisListOutputInflatedJob.


        :param parents: The parents of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: AnalysisParents
        """
        ...
    
    @property
    def created(self): # -> None:
        """Gets the created of this AnalysisListOutputInflatedJob.


        :return: The created of this AnalysisListOutputInflatedJob.
        :rtype: datetime
        """
        ...
    
    @created.setter
    def created(self, created): # -> None:
        """Sets the created of this AnalysisListOutputInflatedJob.


        :param created: The created of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def modified(self): # -> None:
        """Gets the modified of this AnalysisListOutputInflatedJob.


        :return: The modified of this AnalysisListOutputInflatedJob.
        :rtype: datetime
        """
        ...
    
    @modified.setter
    def modified(self, modified): # -> None:
        """Sets the modified of this AnalysisListOutputInflatedJob.


        :param modified: The modified of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def revision(self): # -> None:
        """Gets the revision of this AnalysisListOutputInflatedJob.


        :return: The revision of this AnalysisListOutputInflatedJob.
        :rtype: int
        """
        ...
    
    @revision.setter
    def revision(self, revision): # -> None:
        """Sets the revision of this AnalysisListOutputInflatedJob.


        :param revision: The revision of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def inputs(self): # -> None:
        """Gets the inputs of this AnalysisListOutputInflatedJob.


        :return: The inputs of this AnalysisListOutputInflatedJob.
        :rtype: list[FileListOutput]
        """
        ...
    
    @inputs.setter
    def inputs(self, inputs): # -> None:
        """Sets the inputs of this AnalysisListOutputInflatedJob.


        :param inputs: The inputs of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: list[FileListOutput]
        """
        ...
    
    @property
    def description(self): # -> None:
        """Gets the description of this AnalysisListOutputInflatedJob.


        :return: The description of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @description.setter
    def description(self, description): # -> None:
        """Sets the description of this AnalysisListOutputInflatedJob.


        :param description: The description of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def tags(self): # -> None:
        """Gets the tags of this AnalysisListOutputInflatedJob.


        :return: The tags of this AnalysisListOutputInflatedJob.
        :rtype: list[str]
        """
        ...
    
    @tags.setter
    def tags(self, tags): # -> None:
        """Sets the tags of this AnalysisListOutputInflatedJob.


        :param tags: The tags of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def files(self): # -> None:
        """Gets the files of this AnalysisListOutputInflatedJob.


        :return: The files of this AnalysisListOutputInflatedJob.
        :rtype: list[FileListOutput]
        """
        ...
    
    @files.setter
    def files(self, files): # -> None:
        """Sets the files of this AnalysisListOutputInflatedJob.


        :param files: The files of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: list[FileListOutput]
        """
        ...
    
    @property
    def notes(self): # -> None:
        """Gets the notes of this AnalysisListOutputInflatedJob.


        :return: The notes of this AnalysisListOutputInflatedJob.
        :rtype: list[Note]
        """
        ...
    
    @notes.setter
    def notes(self, notes): # -> None:
        """Sets the notes of this AnalysisListOutputInflatedJob.


        :param notes: The notes of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: list[Note]
        """
        ...
    
    @property
    def job_id(self): # -> None:
        """Gets the job_id of this AnalysisListOutputInflatedJob.


        :return: The job_id of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @job_id.setter
    def job_id(self, job_id): # -> None:
        """Sets the job_id of this AnalysisListOutputInflatedJob.


        :param job_id: The job_id of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def job(self): # -> None:
        """Gets the job of this AnalysisListOutputInflatedJob.


        :return: The job of this AnalysisListOutputInflatedJob.
        :rtype: JobListOutput
        """
        ...
    
    @job.setter
    def job(self, job): # -> None:
        """Sets the job of this AnalysisListOutputInflatedJob.


        :param job: The job of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: JobListOutput
        """
        ...
    
    @property
    def gear_info(self): # -> None:
        """Gets the gear_info of this AnalysisListOutputInflatedJob.


        :return: The gear_info of this AnalysisListOutputInflatedJob.
        :rtype: GearInfo
        """
        ...
    
    @gear_info.setter
    def gear_info(self, gear_info): # -> None:
        """Sets the gear_info of this AnalysisListOutputInflatedJob.


        :param gear_info: The gear_info of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: GearInfo
        """
        ...
    
    @property
    def compute_provider_id(self): # -> None:
        """Gets the compute_provider_id of this AnalysisListOutputInflatedJob.


        :return: The compute_provider_id of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @compute_provider_id.setter
    def compute_provider_id(self, compute_provider_id): # -> None:
        """Sets the compute_provider_id of this AnalysisListOutputInflatedJob.


        :param compute_provider_id: The compute_provider_id of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def join_origin(self): # -> None:
        """Gets the join_origin of this AnalysisListOutputInflatedJob.


        :return: The join_origin of this AnalysisListOutputInflatedJob.
        :rtype: JoinOrigins
        """
        ...
    
    @join_origin.setter
    def join_origin(self, join_origin): # -> None:
        """Sets the join_origin of this AnalysisListOutputInflatedJob.


        :param join_origin: The join_origin of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: JoinOrigins
        """
        ...
    
    @property
    def copy_of(self): # -> None:
        """Gets the copy_of of this AnalysisListOutputInflatedJob.


        :return: The copy_of of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @copy_of.setter
    def copy_of(self, copy_of): # -> None:
        """Sets the copy_of of this AnalysisListOutputInflatedJob.


        :param copy_of: The copy_of of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def original_copy_of(self): # -> None:
        """Gets the original_copy_of of this AnalysisListOutputInflatedJob.


        :return: The original_copy_of of this AnalysisListOutputInflatedJob.
        :rtype: str
        """
        ...
    
    @original_copy_of.setter
    def original_copy_of(self, original_copy_of): # -> None:
        """Sets the original_copy_of of this AnalysisListOutputInflatedJob.


        :param original_copy_of: The original_copy_of of this AnalysisListOutputInflatedJob.  # noqa: E501
        :type: str
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


