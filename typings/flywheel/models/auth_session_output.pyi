"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class AuthSessionOutput:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, origin=..., user_id=..., user_is_admin=..., is_device=..., roles=...) -> None:
        """AuthSessionOutput - a model defined in Swagger"""
        ...
    
    @property
    def origin(self): # -> None:
        """Gets the origin of this AuthSessionOutput.


        :return: The origin of this AuthSessionOutput.
        :rtype: Origin
        """
        ...
    
    @origin.setter
    def origin(self, origin): # -> None:
        """Sets the origin of this AuthSessionOutput.


        :param origin: The origin of this AuthSessionOutput.  # noqa: E501
        :type: Origin
        """
        ...
    
    @property
    def user_id(self): # -> None:
        """Gets the user_id of this AuthSessionOutput.


        :return: The user_id of this AuthSessionOutput.
        :rtype: str
        """
        ...
    
    @user_id.setter
    def user_id(self, user_id): # -> None:
        """Sets the user_id of this AuthSessionOutput.


        :param user_id: The user_id of this AuthSessionOutput.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def user_is_admin(self): # -> None:
        """Gets the user_is_admin of this AuthSessionOutput.


        :return: The user_is_admin of this AuthSessionOutput.
        :rtype: bool
        """
        ...
    
    @user_is_admin.setter
    def user_is_admin(self, user_is_admin): # -> None:
        """Sets the user_is_admin of this AuthSessionOutput.


        :param user_is_admin: The user_is_admin of this AuthSessionOutput.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def is_device(self): # -> None:
        """Gets the is_device of this AuthSessionOutput.


        :return: The is_device of this AuthSessionOutput.
        :rtype: bool
        """
        ...
    
    @is_device.setter
    def is_device(self, is_device): # -> None:
        """Sets the is_device of this AuthSessionOutput.


        :param is_device: The is_device of this AuthSessionOutput.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def roles(self): # -> None:
        """Gets the roles of this AuthSessionOutput.


        :return: The roles of this AuthSessionOutput.
        :rtype: list[RoleType]
        """
        ...
    
    @roles.setter
    def roles(self, roles): # -> None:
        """Sets the roles of this AuthSessionOutput.


        :param roles: The roles of this AuthSessionOutput.  # noqa: E501
        :type: list[RoleType]
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


