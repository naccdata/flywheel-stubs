"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class SiteSettings:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, id=..., created=..., modified=..., center_gears=..., providers=..., ldap_sync=..., viewer_apps=..., deid_profile=...) -> None:
        """SiteSettings - a model defined in Swagger"""
        ...
    
    @property
    def id(self): # -> None:
        """Gets the id of this SiteSettings.


        :return: The id of this SiteSettings.
        :rtype: str
        """
        ...
    
    @id.setter
    def id(self, id): # -> None:
        """Sets the id of this SiteSettings.


        :param id: The id of this SiteSettings.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def created(self): # -> None:
        """Gets the created of this SiteSettings.


        :return: The created of this SiteSettings.
        :rtype: datetime
        """
        ...
    
    @created.setter
    def created(self, created): # -> None:
        """Sets the created of this SiteSettings.


        :param created: The created of this SiteSettings.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def modified(self): # -> None:
        """Gets the modified of this SiteSettings.


        :return: The modified of this SiteSettings.
        :rtype: datetime
        """
        ...
    
    @modified.setter
    def modified(self, modified): # -> None:
        """Sets the modified of this SiteSettings.


        :param modified: The modified of this SiteSettings.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def center_gears(self): # -> None:
        """Gets the center_gears of this SiteSettings.


        :return: The center_gears of this SiteSettings.
        :rtype: list[str]
        """
        ...
    
    @center_gears.setter
    def center_gears(self, center_gears): # -> None:
        """Sets the center_gears of this SiteSettings.


        :param center_gears: The center_gears of this SiteSettings.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def providers(self): # -> None:
        """Gets the providers of this SiteSettings.


        :return: The providers of this SiteSettings.
        :rtype: Providers
        """
        ...
    
    @providers.setter
    def providers(self, providers): # -> None:
        """Sets the providers of this SiteSettings.


        :param providers: The providers of this SiteSettings.  # noqa: E501
        :type: Providers
        """
        ...
    
    @property
    def ldap_sync(self): # -> None:
        """Gets the ldap_sync of this SiteSettings.


        :return: The ldap_sync of this SiteSettings.
        :rtype: LdapSyncStatus
        """
        ...
    
    @ldap_sync.setter
    def ldap_sync(self, ldap_sync): # -> None:
        """Sets the ldap_sync of this SiteSettings.


        :param ldap_sync: The ldap_sync of this SiteSettings.  # noqa: E501
        :type: LdapSyncStatus
        """
        ...
    
    @property
    def viewer_apps(self): # -> None:
        """Gets the viewer_apps of this SiteSettings.


        :return: The viewer_apps of this SiteSettings.
        :rtype: list[ViewerApp]
        """
        ...
    
    @viewer_apps.setter
    def viewer_apps(self, viewer_apps): # -> None:
        """Sets the viewer_apps of this SiteSettings.


        :param viewer_apps: The viewer_apps of this SiteSettings.  # noqa: E501
        :type: list[ViewerApp]
        """
        ...
    
    @property
    def deid_profile(self): # -> None:
        """Gets the deid_profile of this SiteSettings.


        :return: The deid_profile of this SiteSettings.
        :rtype: object
        """
        ...
    
    @deid_profile.setter
    def deid_profile(self, deid_profile): # -> None:
        """Sets the deid_profile of this SiteSettings.


        :param deid_profile: The deid_profile of this SiteSettings.  # noqa: E501
        :type: object
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


