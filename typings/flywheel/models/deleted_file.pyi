"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class DeletedFile:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, id=..., origin=..., parent_ref=..., name=..., provider_id=..., uuid=..., size=..., copy_of=..., cvat=..., parents=..., created=..., deleted=..., replaced=..., hard_deleted=...) -> None:
        """DeletedFile - a model defined in Swagger"""
        ...
    
    @property
    def id(self): # -> None:
        """Gets the id of this DeletedFile.


        :return: The id of this DeletedFile.
        :rtype: FileVersion
        """
        ...
    
    @id.setter
    def id(self, id): # -> None:
        """Sets the id of this DeletedFile.


        :param id: The id of this DeletedFile.  # noqa: E501
        :type: FileVersion
        """
        ...
    
    @property
    def origin(self): # -> None:
        """Gets the origin of this DeletedFile.


        :return: The origin of this DeletedFile.
        :rtype: Origin
        """
        ...
    
    @origin.setter
    def origin(self, origin): # -> None:
        """Sets the origin of this DeletedFile.


        :param origin: The origin of this DeletedFile.  # noqa: E501
        :type: Origin
        """
        ...
    
    @property
    def parent_ref(self): # -> None:
        """Gets the parent_ref of this DeletedFile.


        :return: The parent_ref of this DeletedFile.
        :rtype: ContainerReference
        """
        ...
    
    @parent_ref.setter
    def parent_ref(self, parent_ref): # -> None:
        """Sets the parent_ref of this DeletedFile.


        :param parent_ref: The parent_ref of this DeletedFile.  # noqa: E501
        :type: ContainerReference
        """
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this DeletedFile.


        :return: The name of this DeletedFile.
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this DeletedFile.


        :param name: The name of this DeletedFile.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def provider_id(self): # -> None:
        """Gets the provider_id of this DeletedFile.


        :return: The provider_id of this DeletedFile.
        :rtype: str
        """
        ...
    
    @provider_id.setter
    def provider_id(self, provider_id): # -> None:
        """Sets the provider_id of this DeletedFile.


        :param provider_id: The provider_id of this DeletedFile.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def uuid(self): # -> None:
        """Gets the uuid of this DeletedFile.


        :return: The uuid of this DeletedFile.
        :rtype: str
        """
        ...
    
    @uuid.setter
    def uuid(self, uuid): # -> None:
        """Sets the uuid of this DeletedFile.


        :param uuid: The uuid of this DeletedFile.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def size(self): # -> None:
        """Gets the size of this DeletedFile.


        :return: The size of this DeletedFile.
        :rtype: int
        """
        ...
    
    @size.setter
    def size(self, size): # -> None:
        """Sets the size of this DeletedFile.


        :param size: The size of this DeletedFile.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def copy_of(self): # -> None:
        """Gets the copy_of of this DeletedFile.


        :return: The copy_of of this DeletedFile.
        :rtype: FileVersionCopyOf
        """
        ...
    
    @copy_of.setter
    def copy_of(self, copy_of): # -> None:
        """Sets the copy_of of this DeletedFile.


        :param copy_of: The copy_of of this DeletedFile.  # noqa: E501
        :type: FileVersionCopyOf
        """
        ...
    
    @property
    def cvat(self): # -> None:
        """Gets the cvat of this DeletedFile.


        :return: The cvat of this DeletedFile.
        :rtype: CVATInfo
        """
        ...
    
    @cvat.setter
    def cvat(self, cvat): # -> None:
        """Sets the cvat of this DeletedFile.


        :param cvat: The cvat of this DeletedFile.  # noqa: E501
        :type: CVATInfo
        """
        ...
    
    @property
    def parents(self): # -> None:
        """Gets the parents of this DeletedFile.


        :return: The parents of this DeletedFile.
        :rtype: FileParents
        """
        ...
    
    @parents.setter
    def parents(self, parents): # -> None:
        """Sets the parents of this DeletedFile.


        :param parents: The parents of this DeletedFile.  # noqa: E501
        :type: FileParents
        """
        ...
    
    @property
    def created(self): # -> None:
        """Gets the created of this DeletedFile.


        :return: The created of this DeletedFile.
        :rtype: datetime
        """
        ...
    
    @created.setter
    def created(self, created): # -> None:
        """Sets the created of this DeletedFile.


        :param created: The created of this DeletedFile.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def deleted(self): # -> None:
        """Gets the deleted of this DeletedFile.


        :return: The deleted of this DeletedFile.
        :rtype: datetime
        """
        ...
    
    @deleted.setter
    def deleted(self, deleted): # -> None:
        """Sets the deleted of this DeletedFile.


        :param deleted: The deleted of this DeletedFile.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def replaced(self): # -> None:
        """Gets the replaced of this DeletedFile.


        :return: The replaced of this DeletedFile.
        :rtype: datetime
        """
        ...
    
    @replaced.setter
    def replaced(self, replaced): # -> None:
        """Sets the replaced of this DeletedFile.


        :param replaced: The replaced of this DeletedFile.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def hard_deleted(self): # -> None:
        """Gets the hard_deleted of this DeletedFile.


        :return: The hard_deleted of this DeletedFile.
        :rtype: datetime
        """
        ...
    
    @hard_deleted.setter
    def hard_deleted(self, hard_deleted): # -> None:
        """Sets the hard_deleted of this DeletedFile.


        :param hard_deleted: The hard_deleted of this DeletedFile.  # noqa: E501
        :type: datetime
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


