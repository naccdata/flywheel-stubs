"""
This type stub file was generated by pyright.
"""

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class User:
    swagger_types = ...
    attribute_map = ...
    rattribute_map = ...
    def __init__(self, id=..., user_id=..., firstname=..., lastname=..., email=..., avatar=..., avatars=..., roles=..., root=..., disabled=..., preferences=..., wechat=..., firstlogin=..., lastlogin=..., api_key=..., api_keys=..., created=..., modified=..., deleted=..., central_user_id=..., central_revision=..., info=...) -> None:
        """User - a model defined in Swagger"""
        ...
    
    @property
    def id(self): # -> None:
        """Gets the id of this User.

        Database ID of a user

        :return: The id of this User.
        :rtype: str
        """
        ...
    
    @id.setter
    def id(self, id): # -> None:
        """Sets the id of this User.

        Database ID of a user

        :param id: The id of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def user_id(self): # -> None:
        """Gets the user_id of this User.


        :return: The user_id of this User.
        :rtype: str
        """
        ...
    
    @user_id.setter
    def user_id(self, user_id): # -> None:
        """Sets the user_id of this User.


        :param user_id: The user_id of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def firstname(self): # -> None:
        """Gets the firstname of this User.

        First name

        :return: The firstname of this User.
        :rtype: str
        """
        ...
    
    @firstname.setter
    def firstname(self, firstname): # -> None:
        """Sets the firstname of this User.

        First name

        :param firstname: The firstname of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def lastname(self): # -> None:
        """Gets the lastname of this User.

        Last name

        :return: The lastname of this User.
        :rtype: str
        """
        ...
    
    @lastname.setter
    def lastname(self, lastname): # -> None:
        """Sets the lastname of this User.

        Last name

        :param lastname: The lastname of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def email(self): # -> None:
        """Gets the email of this User.

        Email address

        :return: The email of this User.
        :rtype: str
        """
        ...
    
    @email.setter
    def email(self, email): # -> None:
        """Sets the email of this User.

        Email address

        :param email: The email of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def avatar(self): # -> None:
        """Gets the avatar of this User.

        Avatar image URL

        :return: The avatar of this User.
        :rtype: str
        """
        ...
    
    @avatar.setter
    def avatar(self, avatar): # -> None:
        """Sets the avatar of this User.

        Avatar image URL

        :param avatar: The avatar of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def avatars(self): # -> None:
        """Gets the avatars of this User.


        :return: The avatars of this User.
        :rtype: Avatars
        """
        ...
    
    @avatars.setter
    def avatars(self, avatars): # -> None:
        """Sets the avatars of this User.


        :param avatars: The avatars of this User.  # noqa: E501
        :type: Avatars
        """
        ...
    
    @property
    def roles(self): # -> None:
        """Gets the roles of this User.


        :return: The roles of this User.
        :rtype: list[str]
        """
        ...
    
    @roles.setter
    def roles(self, roles): # -> None:
        """Sets the roles of this User.


        :param roles: The roles of this User.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def root(self): # -> None:
        """Gets the root of this User.

        Super admin flag

        :return: The root of this User.
        :rtype: bool
        """
        ...
    
    @root.setter
    def root(self, root): # -> None:
        """Sets the root of this User.

        Super admin flag

        :param root: The root of this User.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def disabled(self): # -> None:
        """Gets the disabled of this User.


        :return: The disabled of this User.
        :rtype: bool
        """
        ...
    
    @disabled.setter
    def disabled(self, disabled): # -> None:
        """Sets the disabled of this User.


        :param disabled: The disabled of this User.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def preferences(self): # -> None:
        """Gets the preferences of this User.


        :return: The preferences of this User.
        :rtype: UserPreferences
        """
        ...
    
    @preferences.setter
    def preferences(self, preferences): # -> None:
        """Sets the preferences of this User.


        :param preferences: The preferences of this User.  # noqa: E501
        :type: UserPreferences
        """
        ...
    
    @property
    def wechat(self): # -> None:
        """Gets the wechat of this User.


        :return: The wechat of this User.
        :rtype: UserWechat
        """
        ...
    
    @wechat.setter
    def wechat(self, wechat): # -> None:
        """Sets the wechat of this User.


        :param wechat: The wechat of this User.  # noqa: E501
        :type: UserWechat
        """
        ...
    
    @property
    def firstlogin(self): # -> None:
        """Gets the firstlogin of this User.


        :return: The firstlogin of this User.
        :rtype: str
        """
        ...
    
    @firstlogin.setter
    def firstlogin(self, firstlogin): # -> None:
        """Sets the firstlogin of this User.


        :param firstlogin: The firstlogin of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def lastlogin(self): # -> None:
        """Gets the lastlogin of this User.


        :return: The lastlogin of this User.
        :rtype: str
        """
        ...
    
    @lastlogin.setter
    def lastlogin(self, lastlogin): # -> None:
        """Sets the lastlogin of this User.


        :param lastlogin: The lastlogin of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def api_key(self): # -> None:
        """Gets the api_key of this User.


        :return: The api_key of this User.
        :rtype: UserApiKey
        """
        ...
    
    @api_key.setter
    def api_key(self, api_key): # -> None:
        """Sets the api_key of this User.


        :param api_key: The api_key of this User.  # noqa: E501
        :type: UserApiKey
        """
        ...
    
    @property
    def api_keys(self): # -> None:
        """Gets the api_keys of this User.


        :return: The api_keys of this User.
        :rtype: list[UserApiKey]
        """
        ...
    
    @api_keys.setter
    def api_keys(self, api_keys): # -> None:
        """Sets the api_keys of this User.


        :param api_keys: The api_keys of this User.  # noqa: E501
        :type: list[UserApiKey]
        """
        ...
    
    @property
    def created(self): # -> None:
        """Gets the created of this User.

        Creation time (automatically set)

        :return: The created of this User.
        :rtype: datetime
        """
        ...
    
    @created.setter
    def created(self, created): # -> None:
        """Sets the created of this User.

        Creation time (automatically set)

        :param created: The created of this User.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def modified(self): # -> None:
        """Gets the modified of this User.

        Last modification time (automatically updated)

        :return: The modified of this User.
        :rtype: datetime
        """
        ...
    
    @modified.setter
    def modified(self, modified): # -> None:
        """Sets the modified of this User.

        Last modification time (automatically updated)

        :param modified: The modified of this User.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def deleted(self): # -> None:
        """Gets the deleted of this User.

        Deleted time (automatically set on delete)

        :return: The deleted of this User.
        :rtype: datetime
        """
        ...
    
    @deleted.setter
    def deleted(self, deleted): # -> None:
        """Sets the deleted of this User.

        Deleted time (automatically set on delete)

        :param deleted: The deleted of this User.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def central_user_id(self): # -> None:
        """Gets the central_user_id of this User.


        :return: The central_user_id of this User.
        :rtype: str
        """
        ...
    
    @central_user_id.setter
    def central_user_id(self, central_user_id): # -> None:
        """Sets the central_user_id of this User.


        :param central_user_id: The central_user_id of this User.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def central_revision(self): # -> None:
        """Gets the central_revision of this User.


        :return: The central_revision of this User.
        :rtype: int
        """
        ...
    
    @central_revision.setter
    def central_revision(self, central_revision): # -> None:
        """Sets the central_revision of this User.


        :param central_revision: The central_revision of this User.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def info(self): # -> None:
        """Gets the info of this User.


        :return: The info of this User.
        :rtype: object
        """
        ...
    
    @info.setter
    def info(self, info): # -> None:
        """Sets the info of this User.


        :param info: The info of this User.  # noqa: E501
        :type: object
        """
        ...
    
    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        ...
    
    def return_value(self): # -> Self:
        """Unwraps return value from model"""
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    
    def __getitem__(self, key): # -> Any:
        """Returns the value of key"""
        ...
    
    def __setitem__(self, key, value): # -> None:
        """Sets the value of key"""
        ...
    
    def __contains__(self, key): # -> bool:
        """Checks if the given value is a key in this object"""
        ...
    
    def keys(self): # -> dict_keys[str, str]:
        """Returns the list of json properties in the object"""
        ...
    
    def values(self): # -> Generator[Any, Any, None]:
        """Returns the list of values in the object"""
        ...
    
    def items(self): # -> Generator[tuple[str, Any], Any, None]:
        """Returns the list of json property to value mapping"""
        ...
    
    def get(self, key, default=...): # -> Any | None:
        """Get the value of the provided json property, or default"""
        ...
    


